public class Test10 
{
	public static int[][] multiply(int n)
	{
		if (n==1)
		{
			return new int[][]{new int[]{1,1},new int[]{1,0}};
		}
		if (n%2==0)
		{
			int[][] temp=multiply(n/2);
		    return multiplyHelper(temp);
		}
		else
		{
			int[][] temp=multiply((n-1)/2);
			temp=multiplyHelper(temp);
			int[][] result=new int[2][2];
			result[0][0]=temp[0][0]+temp[0][1];
			result[0][1]=temp[0][0];
			result[1][0]=temp[1][0]+temp[1][1];
			result[1][1]=temp[1][0];
			return result;
		}
	}
	public static int[][] multiplyHelper(int[][] temp)
	{
		int[][] result=new int[2][2];
		result[0][0]=temp[0][0]*temp[0][0]+temp[0][1]*temp[1][0];
		result[0][1]=temp[0][0]*temp[0][1]+temp[0][1]*temp[1][1];
		result[1][0]=temp[0][0]*temp[1][0]+temp[1][0]*temp[1][1];
		result[1][1]=temp[0][1]*temp[1][0]+temp[1][1]*temp[1][1];
		return result;
	}
	public static int fibo(int n)
	{
		if (n==0)
		{
			return 0;
		}
		if (n==1)
		{
			return 1;
		}
		if (n<0)
		{
			return -1;
		}
		return multiply(n-1)[0][0];
	}
	public static int fiboBad(int n)
	{
		if (n==1)
		{
			return 1;
		}
		int next=0;
		int prev=0;
		int cur=1;
		for (int i=1;i<n ;i++ )
		{
			next=cur+prev;
			prev=cur;
			cur=next;
		}
		return next;
	}
	public static void main(String[] args) 
	{
		int n=2;
		int result=fibo(n);
		System.out.println(result);
		result=fiboBad(n);
		System.out.println(result);
	}
}
